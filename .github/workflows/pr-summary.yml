name: PR Summary Generator with Links

on:
  pull_request:
    types: [opened]
    branches:
      - main

jobs:
  generate-pr-summary:
    if: github.head_ref == 'staging'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate summary from merged PRs
        id: generate_summary
        run: |
          SUMMARY_FILE=$(mktemp)
          echo "## 📝 確認すべきPull Request一覧" > "$SUMMARY_FILE"

          # マージ者ごとにPRをグループ化するための一時ファイル
          MERGER_FILE=$(mktemp)

          git log origin/main..HEAD --grep="^Merge pull request #" | \
          sed -n 's/.*#\([0-9]*\).*/\1/p' | \
          while read -r pr_number; do
            # PRの詳細情報を取得
            pr_data=$(gh pr view "$pr_number" --json title,baseRefName,headRefName,mergedBy)
            
            if [ -n "$pr_data" ]; then
              pr_title=$(echo "$pr_data" | jq -r '.title')
              base_branch=$(echo "$pr_data" | jq -r '.baseRefName')
              head_branch=$(echo "$pr_data" | jq -r '.headRefName')
              merger_login=$(echo "$pr_data" | jq -r '.mergedBy.login // empty')
              
              # developからstagingへのPRは除外
              is_develop_to_staging=false
              if [ "$head_branch" == "develop" ] && [ "$base_branch" == "staging" ]; then
                is_develop_to_staging=true
              fi
              
              if [ "$is_develop_to_staging" == false ] && [ -n "$merger_login" ]; then
                # マージ者とPR情報を一時ファイルに保存
                echo "${merger_login}|${pr_title}|${pr_number}" >> "$MERGER_FILE"
              fi
            fi
          done

          # マージ者ごとにグループ化して出力
          if [ -s "$MERGER_FILE" ]; then
            # マージ者でソートして重複を除去
            sort "$MERGER_FILE" | uniq | \
            awk -F'|' '{
              merger = $1
              title = $2
              pr_number = $3
              if (merger != prev_merger) {
                if (prev_merger != "") {
                  print ""
                }
                print "@" merger
                prev_merger = merger
              }
              print "- [ ] :twisted_rightwards_arrows: [" title " #" pr_number "](https://github.com/$GITHUB_REPOSITORY/pull/" pr_number ")"
            }' >> "$SUMMARY_FILE"
          fi

          echo "summary_path=$SUMMARY_FILE" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post summary to PR
        if: steps.generate_summary.outputs.summary_path
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body-file "${{ steps.generate_summary.outputs.summary_path }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
